<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.studyproject.joinedgroup.JoinedgroupDao">

    <!-- 참여 신청 추가 -->
    <insert id="createJoinedGroup">
        INSERT INTO joinedgroup
        (
            group_id,
            user_id,
            role,
            joinstatus,
            submission_cnt
        )
        VALUES
        (
            #{group_id},
            #{user_id},
            #{role},
            #{joinstatus},
            #{submission_cnt}
     );
    </insert>
	
	<!-- 그룹 삭제 시 joinedgroup 테이블도 그룹id로 함께 삭제 -->
	<delete id="deleteEveryJoinedGroup" parameterType="String">
		DELETE FROM joinedgroup
		WHERE 1=1
		AND group_id = #{group_id}
	</delete>
	
    <!-- 가입 거절, 가입 취소 (delete) -->
    <delete id="deleteJoinedgroup">
        DELETE FROM joinedgroup
        WHERE 1=1
            AND user_id = #{user_id}
            AND group_id = #{group_id}
    </delete>

    <!-- 참여 상태 변경 -->
    <update id="updateJoinedStatus">
        UPDATE joinedgroup
        SET joinstatus = #{joinstatus}
        WHERE 1=1
            AND user_id = #{user_id}
            AND group_id = #{group_id}
    </update>

    <!-- groulId, userId로 joinedgroup 찾기 -->
    <select id="getByUserIdAndGroupId" resultType="com.example.studyproject.joinedgroup.Joinedgroup">
        SELECT
            group_id,
            user_id,
            role,
            joinstatus,
            submission_cnt
        FROM joinedgroup
        WHERE 1=1
            AND user_id = #{user_id}
            AND group_id = #{group_id}
    </select>

    <!-- 조건에 따른 목록보기 -->
    <select id="selectList" resultType="com.example.studyproject.joinedgroup.Joinedgroup">
        SELECT
            a.group_id
        , a.user_id
        , a.role
        , a.joinstatus
        , a.submission_cnt
        , b.status
        FROM joinedgroup a
        LEFT JOIN studygroup b
            ON a.group_id = b.group_id
        WHERE 1=1
            AND a.user_id = #{user_id}
            AND (COALESCE(#{joinstatus},'')='' OR a.joinstatus = #{joinstatus})   <!-- 가입상태 -->
            AND COALESCE(#{role},'')='' OR a.role = #{role}                     <!-- 그룹장/참여자 -->
            AND COALESCE(#{status},'')='' OR b.status = #{status}               <!-- 그룹상태 -->

    </select>

    <!-- 사용자별 가입한 그룹 목록 -->
    <select id="selectJoinedList" resultType="com.example.studyproject.joinedgroup.Joinedgroup">
        SELECT
            group_id
            , user_id
            , role
            , joinstatus
            , submission_cnt
        FROM joinedgroup
        WHERE 1=1
            AND user_id = #{user_id}
    </select>

	<!-- 그룹 아이디로 리스트 사이즈 체크 -->
	<select id="selectJoinedListSize" resultType="int">
		SELECT
			COUNT(*)
		FROM joinedgroup
		WHERE 1=1
		AND group_id = #{group_id}
	</select>

    <!-- 그룹ID(group_id)와 가입 상태(joinstatus)에 따른 joinedgroup 목록을 조회 -->
    <select id="selectJoinedListByGroupId" resultType="com.example.studyproject.joinedgroup.JoinedUserInfo">
        SELECT
            j.group_id,
            j.user_id,
            j.joinstatus,
            j.submission_cnt,
            m.name,
            m.nickname,
            m.profile_img
        FROM joinedgroup j
        JOIN member m ON j.user_id = m.user_id
        WHERE 1=1
        AND j.group_id = #{group_id}
        AND j.joinstatus = #{joinStatus}
        ORDER BY nickname
    </select>
</mapper>