<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- namespace에 mapper가 생성되어 있는 패키지 경로를 적어준다. -->
<mapper namespace="com.example.studyproject.studylogs.StudyLogsDao">




	<!-- 스터디로그 상세 조회 -->
	<select id="selectStudyLogs" resultType="com.example.studyproject.studylogs.StudyLogs">
		SELECT
			post_id,
			user_id,
			group_id,
			title,
			content,
			create_date,
			update_date,
			file_id,
			img_id
		FROM studylogs
		WHERE 1=1
		AND post_id = #{post_id}
	</select>

    <!-- 결과물 신규추가 -->
    <insert id ="insertLogs">
        INSERT INTO studylogs
        (
            post_id
            , user_id
            , group_id
            , title
            , content
            , create_date
        )
        VALUES (
            ( SELECT COALESCE(CAST(max(post_id) AS INTEGER) + 1 , 1)
                       FROM studylogs WHERE group_id = #{group_id}
                       )
            , #{user_id}
            , #{group_id}
            , #{title}
            , #{content}
            , now()
        )
    </insert>

    <insert id="insertStudyLogs" parameterType="com.example.studyproject.studylogs.StudyLogs" useGeneratedKeys="true" keyProperty="post_id">
        INSERT INTO studylogs (
            post_id,
            user_id,
            group_id,
            title,
            content,
            create_date
        )
        VALUES (
            #{post_id},
            #{user_id},
            #{group_id},
            #{title},
            #{content},
            now()
        )
    </insert>

    <!-- 결과물 업데이트 -->
    <update id="updateStudyLogs" >
        UPDATE studylogs
        SET
        title = #{title},
        content = #{content},
        update_date = now()
        WHERE
        post_id = #{post_id}
    </update>

    <!-- 스터디로그 전체 리스트 -->
    <select id = "selectList" resultType="com.example.studyproject.studylogs.StudyLogs">
        SELECT post_id
            , title
            , create_date
        FROM studylogs
    </select>

    <!-- 스터디로그 id 검사 -->
    <select id="getNextPostIdIfPrefixExists" parameterType="string" resultType="long">
        SELECT
            CASE
                WHEN COUNT(*) > 0 THEN COALESCE(MAX(CAST(post_id AS BIGINT)), 0) + 1
                ELSE 0
            END
        FROM studylogs
        WHERE post_id LIKE CONCAT(#{group_id}, '%')
    </select>

    <!--  그룹별, 사용자별 studylog 전체 목록  -->
    <!--  TODO resulttype 수정 필요. assigncycle(회차) 있으면 좋을 것 같은데, 상의 필요 -->
    <select id="selectStudyLogsListByGroup" resultType="com.example.studyproject.studylogs.StudyLogs">
        SELECT A.POST_ID
             , A.USER_ID
             , A.GROUP_ID
             , A.TITLE
             , A.CONTENT
             , A.CREATE_DATE
             , A.UPDATE_DATE
             , A.FILE_ID
             , A.IMG_ID
             , B.assigncycle
        FROM STUDYLOGS A
                 INNER JOIN sg_assigncycle B
                            ON A.group_id = B.group_id
                                AND A.create_date BETWEEN DATE(B.startdate) AND DATE(B.enddate)
        WHERE (COALESCE(#{group_id},'')='' OR A.GROUP_ID = #{group_id})
          AND (COALESCE(#{user_id},'')='' OR A.USER_ID = #{user_id})

    </select>

    <!--  스터디 메인 글 (LIMIT 5)  -->
    <!--  TODO resulttype 수정 필요. assigncycle(회차) 있으면 좋을 것 같은데, 상의 필요 -->
    <select id="studyMainListLimit5" resultType="com.example.studyproject.studylogs.StudyLogs">
        SELECT A.POST_ID
             , A.USER_ID
             , A.GROUP_ID
             , A.TITLE
             , A.CONTENT
             , A.CREATE_DATE
             , A.UPDATE_DATE
             , A.FILE_ID
             , A.IMG_ID
             , B.assigncycle
        FROM STUDYLOGS A
                 INNER JOIN sg_assigncycle B
                            ON A.group_id = B.group_id
                                AND A.create_date BETWEEN DATE(B.startdate) AND DATE(B.enddate)
        WHERE A.GROUP_ID = #{group_id}
        order by create_date desc
        LIMIT 5
    </select>

</mapper>