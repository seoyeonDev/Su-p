<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
        
<!-- namespace에 mapper가 생성되어 있는 패키지 경로를 적어준다. -->
<mapper namespace="com.example.studyproject.member.MemberDao">

	<!-- 회원가입 -->
	<insert id="insertMember">
		INSERT INTO member
		(
			user_id,
			password,
			name,
			nickname,
			email,
			profile_img
		)
		VALUES
		(
			#{user_id},
			#{password},
			#{name},
			#{nickname},
			#{email},
			#{profile_img}
		);
	</insert>
	
	<!-- 로그인 -->
	<select id="loginMember" resultType="com.example.studyproject.member.Member">
		SELECT *
		FROM member
		WHERE user_id = #{user_id}
		AND password = #{password}
	</select>
	
	<!-- 수정 -->
	<update id="updateMember">
		UPDATE member
		SET
			password = #{password},
			nickname = #{nickname},
			profile_img = #{profile_img}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 실패횟수 업데이트 -->
	<update id="updateFailNum">
		UPDATE member
		SET fail_num = #{fail_num}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 잠금여부 업데이트 -->
	<update id="updateLockYn">
		UPDATE member
		SET lock_yn = #{lock_yn}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- id에 Dao의 메서드명을 맵핑해주고, resultType에 vo의 패키지 경로를 적어준다. -->
	<select id="getMemberById" resultType="com.example.studyproject.member.Member">
		SELECT * FROM member WHERE user_id = #{user_id}
	</select>

	<!-- 아이디찾기 -->
	<select id="findId" resultType="String">
		SELECT (CASE WHEN count(user_id) = 1 THEN user_id ELSE 'N' END) as user_id
		FROM member
		               WHERE 1=1
							AND name = #{name}
							AND email = #{email}
					   GROUP BY user_id
	</select>
	<select id="chkId" resultType="com.example.studyproject.member.Member">

		 SELECT user_id FROM member
		         WHERE user_id = #{user_id}
-- 		           		AND name = #{name}
-- 						AND email = #{email}

	</select>

	<update id="resetPwd">

		SELECT user_id FROM member
		WHERE user_id = #{user_id}
		  AND name = #{name}
		  AND email = #{email}

	</update>

	<!-- 회원 탈퇴 -->
	<delete id="deleteMember">
		DELETE FROM member
		WHERE user_id = #{user_id}
	</delete>
</mapper>