<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.example.studyproject.studygroup.StudyGroupDao">
	<!-- 공통 열 목록 정의 -->
	<sql id="studyGroupColumns">
		group_id,
		leader_id,
		title,
		name,
		study_desc,
		kind,
		status,
		mem_cnt,
		startdate,
		enddate,
		view_cnt,
		chk_m,
		chk_min_cnt,
		chk_total_cnt,
		penalty
	</sql>

	<!-- 그룹ID 최대값 찾기 -->
	<select id="selectMaxGroupId" resultType="String">
		SELECT
			MAX(group_id) as group_id
		FROM studygroup
		WHERE SUBSTRING(group_id, 1, 6) = #{yrmd};
	</select>
	
	<!-- 그룹 추가 -->
	<insert id="createGroup">
		INSERT INTO studygroup
		(
			group_id,
			leader_id,
			title,
			name,
			study_desc,
			kind,
			status,
			mem_cnt,
			startdate,
			enddate,
			chk_m,
			chk_min_cnt,
			chk_total_cnt,
			penalty
		)
		VALUES
		(
			#{group_id},
			#{leader_id},
			#{title},
			#{name},
			#{study_desc},
			#{kind},
			'STAT10',
			#{mem_cnt},
			#{startdate},
			#{enddate},
			#{chk_m},
			#{chk_min_cnt},
			#{chk_total_cnt},
			#{penalty}
		);
	</insert>
	
	<!-- 그룹 수정 -->
	<update id="updateGroup">
		UPDATE studygroup
		SET
			title = #{title},
			name = #{name},
			study_desc = #{study_desc},
			kind = #{kind},
			status = #{status},
			mem_cnt = #{mem_cnt},
			startdate = #{startdate},
			enddate = #{enddate},
			chk_m = #{chk_m},
			chk_min_cnt = #{chk_min_cnt},
			chk_total_cnt = #{chk_total_cnt},
			penalty = #{penalty}
		WHERE leader_id = #{leader_id}
		AND group_id = #{group_id}
	</update>

	<!-- 그룹 삭제 -->
	<delete id="deleteGroup" parameterType="com.example.studyproject.studygroup.StudyGroup">
		DELETE
		FROM studygroup
		WHERE
			group_id = #{group_id}
		AND
			leader_id = #{leader_id}
	</delete>
  
  <!-- 그룹 리스트 호출 -->
	<select id="selectListStudyGroup" resultType="hashmap">
		SELECT
			<include refid="studyGroupColumns"/>
		FROM studygroup
		WHERE 1=1
		ORDER BY group_id desc;
	</select>
	
	<!-- 그룹 제목으로 리스트 호출 --> 
	<select id="selectListByTitle" resultType="hashmap">
		SELECT
			<include refid="studyGroupColumns"/>
		FROM studygroup
		WHERE 1=1
		AND title like '%'||#{title}||'%'
		ORDER BY group_id desc;
	</select>
    
	<!-- 그룹 상세 조회 -->
	<select id="selectStudyGroup" resultType="com.example.studyproject.studygroup.StudyGroup">
		SELECT
			<include refid="studyGroupColumns"/>
		FROM studygroup
		WHERE 1=1
		AND group_id = #{group_id};
	</select>
	
	<!-- 조회수 업데이트 -->
	<update id="updateViewCnt">
		UPDATE studygroup
		SET
			view_cnt = view_cnt + 1
		WHERE
			group_id = #{group_id}
	</update>

	<update id="changeStatus">
		UPDATE studygroup
		SET status = (CASE WHEN now() &lt; DATE(startdate) THEN 'STAT10'
							WHEN now() &gt; DATE(startdate) THEN 'STAT20'
		    				WHEN now() &gt; DATE(enddate) THEN 'STAT30' END
		    )
		WHERE status != 'STAT30'
	</update>

	<!-- 제목 & (날짜 or 조회수) 조회 -->
	<select id="getStudyGroups" resultType="hashmap">
		SELECT
		<include refid="studyGroupColumns"/>
		FROM studygroup
		WHERE 1=1
		AND title like '%'||#{title}||'%'
		<choose>
			<when test="isSortByViews">
				ORDER BY view_cnt DESC
			</when>
			<when test="isSortByLatest">
				ORDER BY startdate DESC
			</when>
			<otherwise>
				ORDER BY group_id DESC
			</otherwise>
		</choose>
	</select>
</mapper>